---
jupyter:
  jupytext:
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: '1.0'
      jupytext_version: 1.16.1
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

```{python}
import pandas as pd
import matplotlib as mpl
import geopandas as gpd
import pydeck as pdk
import requests

import geopandas as gpd
import matplotlib as mpl
import numpy as np
import pandas as pd
import shapely

from lonboard import Map, ScatterplotLayer, BitmapTileLayer
```

```{python}
dtm = pd.read_excel('inputs/DTM Nigeria Round 44 Dataset of Needs Monitoring Assessment for IDPs.xlsx', sheet_name='Needs Monitoring for IDPs')
dtm = dtm[dtm['Population Types'] =='IDPs in camp']
dtm = dtm[['Site Name ','Individuals (IND)','Longitude','Latitude']]

dtm = gpd.GeoDataFrame(dtm, geometry=gpd.points_from_xy(dtm.Longitude, dtm.Latitude), crs="EPSG:4326")
```

```{python}
MAP_KEY = 'ede80fc572c8ff1367eb393f5a7550b0'

nigeria_url = 'https://firms.modaps.eosdis.nasa.gov/api/country/csv/' + MAP_KEY + '/MODIS_NRT/NGA/10'
firms_nigeria_10day = pd.read_csv(nigeria_url)
firms_nigeria_10day  = gpd.GeoDataFrame(firms_nigeria_10day , geometry=gpd.points_from_xy(firms_nigeria_10day.longitude, firms_nigeria_10day.latitude), crs="EPSG:4326")
```

```{python}
firms_nigeria_historic = pd.read_csv('inputs/DL_FIRE_J1V-C2_461242/fire_nrt_J1V-C2_461242.csv')
firms_nigeria_historic = gpd.GeoDataFrame(firms_nigeria_historic , geometry=gpd.points_from_xy(firms_nigeria_historic.longitude, firms_nigeria_historic.latitude), crs="EPSG:4326")
```

```{python}
firms_nigeria_historic.head(3)
```

```{python}
geometry = shapely.points(firms_nigeria_historic.pop("longitude"), firms_nigeria_historic.pop("latitude"))
gdf = gpd.GeoDataFrame(firms_nigeria_historic, geometry=geometry)
```

```{python}
gdf
```

```{python}
fires = ScatterplotLayer.from_geopandas(gdf)

map = Map(layers=[fires], _height=800)
fires.get_fill_color = "#eb0000"
fires.radius_scale = 500
map
```

```{python}
len(gdf)
```

```{python}
map.to_html('temp.html')
```

```{python}
map.fly_to(longitude= 6.007441, latitude= 46.232858,zoom= 10)
```

```{python}
6.007441,46.232858
```
